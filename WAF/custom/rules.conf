# ------ Securetia ModSecurity Example Rules ------ #

# Self-Contained
SecDefaultAction "phase:1,log,auditlog,deny,status:403"
SecDefaultAction "phase:2,log,auditlog,deny,status:403"

# Anomaly Score
# SecDefaultAction "phase:1,log,auditlog,pass"
# SecDefaultAction "phase:2,log,auditlog,pass"


SecAction \
  "id:800000,\
  nolog,\
  pass,\
  setvar:tx.critical_anomaly_score=5,\
  setvar:tx.error_anomaly_score=4,\
  setvar:tx.warning_anomaly_score=3,\
  setvar:tx.notice_anomaly_score=2,\
  setvar:tx.anomaly_score_threshold=5"


SecRule ARGS "attack" "phase:2,log,deny,id:700000"


SecRule ARGS "(or|and|not|like)" \
        "phase:request,\
	block,\
        msg:'SQL Injection Attack: Keywords',\
        id:700001,\
        severity:'WARNING'"


SecRule ARGS "(or|and|not|like)" \
        "phase:request,\
        t:lowercase,\
	block,\
        msg:'SQL Injection Attack: Keywords',\
        id:700002,\
        severity:'WARNING'"


SecRule ARGS "\W+(or|and|not|like)\W+" \
        "phase:request,\
        t:lowercase,\
        block,\
        msg:'SQL Injection Attack: Keywords',\
        id:700003,\
        severity:'WARNING'"


SecRule ARGS "\W+(or|and|not|like)\W+" \
        "phase:request,\
        t:lowercase,\
        block,\
        msg:'SQL Injection Attack: Keywords',\
        id:700004,\
        severity:'WARNING',\
        setvar:tx.anomaly_score=+%{tx.warning_anomaly_score}"


SecRule ARGS "(\"|'|Â´|`)" \
        "phase:request,\
        t:lowercase,\
        block,\
        msg:'SQL Injection Attack: Quotes',\
        id:700005,\
        severity:'WARNING',\
        setvar:tx.anomaly_score=+%{tx.warning_anomaly_score}"


SecRule ARGS "@detectSQLi" \
        "phase:request,\
        block,\
        msg:'SQL Injection Attack: LibInjection',\
        id:700006,\
        severity:'CRITICAL',\
        setvar:tx.anomaly_score=+%{tx.critical_anomaly_score}"


SecRule TX:ANOMALY_SCORE "@ge %{tx.anomaly_score_threshold}" \
    "msg:'Inbound Anomaly Score Exceeded (Total Score: %{TX.ANOMALY_SCORE})',\
    severity:CRITICAL,\
    phase:request,\
    id:799999,\
    t:none,\
    deny,\
    log,\
    setvar:tx.tx_msg=%{tx.msg}"


SecRule REQUEST_URI "@EndsWith /vulnerabilities/exec/" \
	phase:1,chain,deny,t:none,id:700007
  SecRule REQUEST_HEADERS:User-Agent "@contains Firefox"


SecRule ARGS:dev "^true$" \
	"phase:1,\
	pass,\
	id:700008,\
	ctl:ruleEngine=DetectionOnly"
	
SecRule ARGS "@contains &&" "phase:2,log,deny,msg:'Command injection'id:700009"
	


SecRuleRemoveById 700000 # Attack
SecRuleRemoveById 700001 # SQL Injection Attack: Keywords
SecRuleRemoveById 700002 # SQL Injection Attack: Keywords
SecRuleRemoveById 700003 # SQL Injection Attack: Keywords
SecRuleRemoveById 700004 # SQL Injection Attack: Keywords
SecRuleRemoveById 700005 # SQL Injection Attack: Quotes
SecRuleRemoveById 700006 # SQL Injection Attack: LibInjection
SecRuleRemoveById 700007 
